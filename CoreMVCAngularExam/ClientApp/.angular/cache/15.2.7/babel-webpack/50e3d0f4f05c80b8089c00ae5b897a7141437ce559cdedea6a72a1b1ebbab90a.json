{"ast":null,"code":"import { AddContactDialogComponent } from '../add-contact-dialog/add-contact-dialog.component';\nimport { EditContactDialogComponent } from '../edit-contact-dialog/edit-contact-dialog.component';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./contactdata.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../phoneNumbers/phoneNumbersdata.service\";\nimport * as i4 from \"../categories/categorydata.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nfunction ContactsComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Please, choose action.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContactsComponent_table_10_tr_14_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function ContactsComponent_table_10_tr_14_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const contact_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.deleteContact(contact_r3.contactId));\n    });\n    i0.ɵɵtext(1, \" Delete \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactsComponent_table_10_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ContactsComponent_table_10_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const contact_r3 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.updateContact(contact_r3.contactId, contact_r3.firstName, contact_r3.lastName, contact_r3.categoryId, contact_r3.phoneId));\n    });\n    i0.ɵɵtext(11, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, ContactsComponent_table_10_tr_14_button_12_Template, 2, 0, \"button\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const contact_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r3.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r3.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_2_0 = ctx_r2.getCategoryById(contact_r3.categoryId)) == null ? null : tmp_2_0.categoryName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_3_0 = ctx_r2.getPhoneNumberById(contact_r3.phoneId)) == null ? null : tmp_3_0.numberPhone);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", contact_r3.contactId !== undefined);\n  }\n}\nfunction ContactsComponent_table_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 6)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, ContactsComponent_table_10_tr_14_Template, 13, 5, \"tr\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.contacts);\n  }\n}\nexport class ContactsComponent {\n  constructor(contactDataSrv, dialog, phoneNumberDataService, categoryDataService, formBuilder) {\n    this.contactDataSrv = contactDataSrv;\n    this.dialog = dialog;\n    this.phoneNumberDataService = phoneNumberDataService;\n    this.categoryDataService = categoryDataService;\n    this.formBuilder = formBuilder;\n    this.showAddForm = false; // Переменная для отображения/скрытия формы\n    this.newContact = {\n      firstName: '',\n      lastName: '',\n      categoryId: 0,\n      phoneId: 0,\n      contactId: 0\n    };\n    this.searchQuery = '';\n  }\n  ngOnInit() {\n    this.contacts = this.contactDataSrv.contacts;\n    this.showAll();\n    this.initializeForm();\n    this.getPhoneNumbers();\n    this.getCategories();\n    this.contacts = this.contactDataSrv.contacts;\n    this.filteredContacts = this.contacts;\n  }\n  searchContacts() {\n    if (this.searchQuery.trim() === '') {\n      this.filteredContacts = this.contacts;\n      return;\n    }\n    this.filteredContacts = this.contacts?.filter(contact => contact.firstName.toLowerCase().includes(this.searchQuery.toLowerCase()) || contact.lastName.toLowerCase().includes(this.searchQuery.toLowerCase()) || this.getCategoryById(contact.categoryId)?.categoryName.toLowerCase().includes(this.searchQuery.toLowerCase()) || this.getPhoneNumberById(contact.phoneId)?.numberPhone.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    console.log('Данные резалта:', this.filteredContacts);\n  }\n  initializeForm() {\n    this.contactForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      phoneId: ['', Validators.required],\n      categoryId: ['', Validators.required]\n    });\n  }\n  getPhoneNumberById(phoneId) {\n    return this.phoneNumbers?.find(phone => phone.phoneId === phoneId);\n  }\n  getCategoryById(categoryId) {\n    return this.categories?.find(category => category.categoryId === categoryId);\n  }\n  getPhoneNumbers() {\n    this.phoneNumberDataService.getPhoneNumbers().subscribe(data => {\n      this.phoneNumbers = data;\n    });\n  }\n  getCategories() {\n    this.categoryDataService.getCategories().subscribe(data => {\n      this.categories = data;\n    });\n  }\n  showAll() {\n    this.contactDataSrv.showAll();\n  }\n  /*\r\n  addContact(): void {\r\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\r\n      width: '400px',\r\n    });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n      console.log('Данные резалта:', result);\r\n      if (result) {\r\n        console.log('Данные if(резалт):', result);\r\n        this.contactDataSrv.addContact(result).subscribe(\r\n          response => {\r\n            console.log('Данные успешно добавлены:', response);\r\n            // После успешного добавления контакта, обновляем данные на странице.\r\n            this.showAll();\r\n          },\r\n          error => {\r\n            console.error('Не удалось добавить данные:', error);\r\n          },\r\n          () => {\r\n            console.log('Диалог успешно закрыт!');\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }*/\n  addContact() {\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Данные резалта:', result);\n      if (result) {\n        console.log('Данные if(резалт):', result);\n        this.contactDataSrv.addContact(result).subscribe(response => {\n          console.log('Данные успешно добавлены:', response);\n          // После успешного добавления контакта, обновляем данные на странице.\n          this.showAll();\n        }, error => {\n          console.error('Не удалось добавить данные:', error);\n        }, () => {\n          console.log('Диалог успешно закрыт!');\n        });\n      } else {\n        console.log('Диалог закрыт без данных');\n      }\n    });\n  }\n  updateContact(contactId, firstName, lastName, categoryId, phoneId) {\n    if (contactId === undefined || categoryId === undefined || phoneId === undefined || !firstName || !lastName) {\n      return;\n    }\n    const dialogRef = this.dialog.open(EditContactDialogComponent, {\n      width: '400px',\n      data: {\n        editedContactId: contactId,\n        contact: {\n          contactId,\n          firstName,\n          lastName,\n          categoryId,\n          phoneId\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log('Данные из диалога:', result);\n        // Обновите контакт в this.contactDataSrv после закрытия диалога\n        this.contactDataSrv.updateContact(result.contactId, result.firstName, result.lastName, result.categoryId, result.phoneId).subscribe(response => {\n          console.log('Contact updated successfully:', response);\n          this.showAll();\n          // Возможно, вы хотите выполнить какие-то дополнительные действия после успешного обновления\n        }, error => {\n          console.error('Error updating contact:', error);\n          // Обработайте ошибку, если это необходимо\n        });\n      } else {\n        console.log('Диалог закрыт без данных');\n      }\n    });\n  }\n  deleteContact(contactId) {\n    this.contactDataSrv.deleteContact(contactId);\n  }\n}\nContactsComponent.ɵfac = function ContactsComponent_Factory(t) {\n  return new (t || ContactsComponent)(i0.ɵɵdirectiveInject(i1.ContactDataService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.PhoneNumberDataService), i0.ɵɵdirectiveInject(i4.CategoryDataService), i0.ɵɵdirectiveInject(i5.FormBuilder));\n};\nContactsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactsComponent,\n  selectors: [[\"contacts\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"search-container\"], [\"matInput\", \"\", \"placeholder\", \"Search\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-button\", \"\", 1, \"btn\", \"btn-accent\", 3, \"click\"], [4, \"ngIf\"], [1, \"example-button-row\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", \"class\", \"btn Warn\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 1, \"btn\", \"Warn\", 3, \"click\"]],\n  template: function ContactsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Contacts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ContactsComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.searchQuery = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ContactsComponent_Template_button_click_4_listener() {\n        return ctx.searchContacts();\n      });\n      i0.ɵɵtext(5, \"Search\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, ContactsComponent_p_6_Template, 3, 0, \"p\", 3);\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ContactsComponent_Template_button_click_8_listener() {\n        return ctx.addContact();\n      });\n      i0.ɵɵtext(9, \"Add Contact\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, ContactsComponent_table_10_Template, 15, 1, \"table\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchQuery);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contacts);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.contacts);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i7.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\".example-button-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .example-button-row[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\\r\\n.example-disabled[_ngcontent-%COMP%] {\\r\\n  display: inline-block;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udGFjdHMvY29udGFjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1idXR0b24tcm93IGJ1dHRvbixcclxuLmV4YW1wbGUtYnV0dG9uLXJvdyBhIHtcclxuICBtYXJnaW4tcmlnaHQ6IDhweDtcclxufVxyXG5cclxuLmV4YW1wbGUtZGlzYWJsZWQge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["AddContactDialogComponent","EditContactDialogComponent","Validators","i0","ContactsComponent","constructor","contactDataSrv","dialog","phoneNumberDataService","categoryDataService","formBuilder","firstName","lastName","categoryId","phoneId","contactId","ngOnInit","contacts","showAll","initializeForm","getPhoneNumbers","getCategories","filteredContacts","searchContacts","searchQuery","trim","filter","contact","toLowerCase","includes","getCategoryById","categoryName","getPhoneNumberById","numberPhone","console","log","contactForm","group","required","phoneNumbers","find","phone","categories","category","subscribe","data","addContact","dialogRef","open","width","afterClosed","result","response","error","updateContact","undefined","editedContactId","deleteContact","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\STEP\\My_Project\\Angular\\CoreMvcAngularExam\\CoreMVCAngularExam\\ClientApp\\src\\app\\contacts\\contacts.component.ts","F:\\STEP\\My_Project\\Angular\\CoreMvcAngularExam\\CoreMVCAngularExam\\ClientApp\\src\\app\\contacts\\contacts.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContactDataService, Contact } from './contactdata.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddContactDialogComponent } from '../add-contact-dialog/add-contact-dialog.component';\r\nimport { EditContactDialogComponent } from '../edit-contact-dialog/edit-contact-dialog.component';\r\nimport { PhoneNumberDataService } from '../phoneNumbers/phoneNumbersdata.service';\r\nimport { CategoryDataService } from '../categories/categorydata.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n  public contacts: Contact[] | undefined;\r\n  public showAddForm = false; // Переменная для отображения/скрытия формы\r\n  phoneNumbers: any[] | undefined; // Замените any на реальный тип данных\r\n  categories: any[] | undefined; // Замените any на реальный тип данных\r\n  public newContact: Contact = {\r\n      firstName: '', lastName: '', categoryId: 0, phoneId: 0,\r\n      contactId: 0\r\n  };\r\n    contactForm: any;\r\n  public filteredContacts: Contact[] | undefined;\r\n  public searchQuery: string = '';\r\n\r\n  constructor(private contactDataSrv: ContactDataService, private dialog: MatDialog, private phoneNumberDataService: PhoneNumberDataService,\r\n    private categoryDataService: CategoryDataService, private formBuilder: FormBuilder ) {\r\n    }\r\n    \r\n  ngOnInit() {\r\n    this.contacts = this.contactDataSrv.contacts;\r\n    this.showAll();\r\n    this.initializeForm();\r\n    this.getPhoneNumbers();\r\n    this.getCategories();\r\n    this.contacts = this.contactDataSrv.contacts;\r\n    this.filteredContacts = this.contacts;\r\n  }\r\n\r\n  searchContacts(): void {\r\n    if (this.searchQuery.trim() === '') {\r\n      this.filteredContacts = this.contacts;\r\n      return;\r\n    }\r\n\r\n\r\n    this.filteredContacts = this.contacts?.filter(contact =>\r\n      contact.firstName!.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n      contact.lastName!.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n      this.getCategoryById(contact.categoryId)?.categoryName.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n      this.getPhoneNumberById(contact.phoneId)?.numberPhone.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n    );\r\n  \r\n    console.log('Данные резалта:', this.filteredContacts );\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.contactForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      phoneId: ['', Validators.required],\r\n      categoryId: ['', Validators.required],\r\n    });\r\n  }\r\n  getPhoneNumberById(phoneId: number | undefined): any {\r\n    return this.phoneNumbers?.find(phone => phone.phoneId === phoneId);\r\n  }\r\n\r\n  getCategoryById(categoryId: number | undefined): any {\r\n    return this.categories?.find(category => category.categoryId === categoryId);\r\n  }\r\n\r\n  getPhoneNumbers(): void {\r\n    this.phoneNumberDataService.getPhoneNumbers().subscribe((data: any[] | undefined) => {\r\n      this.phoneNumbers = data;\r\n    });\r\n  }\r\n\r\n  getCategories(): void {\r\n    this.categoryDataService.getCategories().subscribe(data => {\r\n      this.categories = data;\r\n    });\r\n  }\r\n\r\n  showAll() {\r\n    this.contactDataSrv.showAll();\r\n  }\r\n  /*\r\n  addContact(): void {\r\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('Данные резалта:', result);\r\n      if (result) {\r\n        console.log('Данные if(резалт):', result);\r\n        this.contactDataSrv.addContact(result).subscribe(\r\n          response => {\r\n            console.log('Данные успешно добавлены:', response);\r\n            // После успешного добавления контакта, обновляем данные на странице.\r\n            this.showAll();\r\n          },\r\n          error => {\r\n            console.error('Не удалось добавить данные:', error);\r\n          },\r\n          () => {\r\n            console.log('Диалог успешно закрыт!');\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }*/\r\n\r\n  addContact(): void {\r\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('Данные резалта:', result);\r\n      if (result) {\r\n        console.log('Данные if(резалт):', result);\r\n        this.contactDataSrv.addContact(result).subscribe(\r\n          response => {\r\n            console.log('Данные успешно добавлены:', response);\r\n            // После успешного добавления контакта, обновляем данные на странице.\r\n            this.showAll();\r\n          },\r\n          error => {\r\n            console.error('Не удалось добавить данные:', error);\r\n          },\r\n          () => {\r\n            console.log('Диалог успешно закрыт!');\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }\r\n \r\n  updateContact(contactId: number | undefined, firstName: string | undefined, lastName: string | undefined, categoryId: number | undefined, phoneId: number | undefined): void {\r\n    if (contactId === undefined || categoryId === undefined || phoneId === undefined || !firstName || !lastName) {\r\n      return;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(EditContactDialogComponent, {\r\n      width: '400px',\r\n      data: { editedContactId: contactId, contact: { contactId, firstName, lastName, categoryId, phoneId } },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        console.log('Данные из диалога:', result);\r\n        // Обновите контакт в this.contactDataSrv после закрытия диалога\r\n        this.contactDataSrv.updateContact(result.contactId, result.firstName, result.lastName, result.categoryId, result.phoneId)\r\n          .subscribe(response => {\r\n            console.log('Contact updated successfully:', response);\r\n            this.showAll();\r\n            // Возможно, вы хотите выполнить какие-то дополнительные действия после успешного обновления\r\n          }, error => {\r\n            console.error('Error updating contact:', error);\r\n            // Обработайте ошибку, если это необходимо\r\n          });\r\n\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  deleteContact(contactId: number): void {\r\n\r\n    this.contactDataSrv.deleteContact(contactId);\r\n  }\r\n}\r\n","\r\n<h1>Contacts</h1>\r\n\r\n<div class=\"search-container\">\r\n  <input matInput placeholder=\"Search\" [(ngModel)]=\"searchQuery\" />\r\n  <button mat-button (click)=\"searchContacts()\" class=\"btn btn-accent\">Search</button>\r\n</div>\r\n\r\n<p *ngIf=\"!contacts\"><em>Please, choose action.</em></p>\r\n<div class=\"example-button-row\">\r\n  <button mat-button (click)=\"addContact()\" class=\"btn btn-accent\">Add Contact</button>\r\n</div>\r\n<table class='table table-striped' *ngIf=\"contacts\">\r\n  <thead>\r\n    <tr>\r\n      <!--<th>Id</th>-->\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Category</th>\r\n      <th>Phone</th>\r\n      <th>Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let contact of contacts\">\r\n      <!--<td>{{ contact.contactId }}</td>-->\r\n      <td>{{ contact.firstName }}</td>\r\n      <td>{{ contact.lastName }}</td>\r\n      <td>{{ getCategoryById(contact.categoryId)?.categoryName }}</td>\r\n      <td>{{ getPhoneNumberById(contact.phoneId)?.numberPhone }}</td>\r\n      <!--  <td>{{ contact.categoryId }}</td>\r\n     <td>{{ contact.phoneId }}</td>\r\n      <td>{{ contact.Category.categoryName }}</td>\r\n  <td>{{ contact.PhoneNumber.numberPhone }}</td>-->\r\n      <td>\r\n        <button mat-button (click)=\"updateContact(contact.contactId, contact.firstName, contact.lastName, contact.categoryId, contact.phoneId)\"\r\n                class=\"btn btn-accent\">\r\n          Edit\r\n        </button>\r\n        <button mat-button *ngIf=\"contact.contactId !== undefined\"\r\n                (click)=\"deleteContact(contact.contactId)\"\r\n                class=\"btn Warn\">\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}