{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AddCategoryDialogComponent } from './addNewCategory.component';\nimport { EditCategoryDialogComponent } from '../edit-category-dialog/edit-category-dialog.component';\nlet CategoriesComponent = class CategoriesComponent {\n  constructor(categoryDataSrv, dialog) {\n    this.categoryDataSrv = categoryDataSrv;\n    this.dialog = dialog;\n  }\n  ngOnInit() {\n    this.showAll();\n    /*this.categories = this.categoryDataSrv.categories;*/\n  }\n\n  showAll() {\n    this.categoryDataSrv.showAll();\n    this.categories = this.categoryDataSrv.categories;\n  }\n  addCategory() {\n    // Открываем диалоговое окно для добавления контакта\n    const dialogRef = this.dialog.open(AddCategoryDialogComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log('Данные из диалога:', result);\n        this.categoryDataSrv.addCategory(result);\n        // Дополнительные действия\n      } else {\n        console.log('Диалог закрыт без данных');\n      }\n    });\n  }\n  deleteCategory(categoryId) {\n    this.categoryDataSrv.deleteCategory(categoryId);\n  }\n  updateCategory(categoryId, categoryName) {\n    if (categoryId === undefined || !categoryName) {\n      // Отобразить сообщение об ошибке пользователю, что categoryId не определен\n      return;\n    }\n    const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\n      data: {\n        categoryId,\n        categoryName\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.categoryId && result.categoryName) {\n        this.categoryDataSrv.updateCategory(result.categoryId, result.categoryName).subscribe(response => {\n          this.showAll();\n        }, error => {\n          if (error instanceof HttpErrorResponse) {\n            if (error.error.errors && error.error.errors.CategoryName) {\n              // Отобразить сообщение об ошибке пользователю\n              // Например, используя Angular Material Snackbar\n              this.snackBar.open('Validation error: ' + error.error.errors.CategoryName[0], 'Close', {\n                duration: 5000\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n};\nCategoriesComponent = __decorate([Component({\n  selector: 'categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})], CategoriesComponent);\nexport { CategoriesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAqBC,iBAAiB,QAAQ,sBAAsB;AACpE,SAASC,0BAA0B,QAAQ,4BAA4B;AACvE,SAASC,2BAA2B,QAAQ,wDAAwD;AAQ7F,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YAAoBC,eAAoC,EAAUC,MAAiB;IAA/D,oBAAe,GAAfD,eAAe;IAA+B,WAAM,GAANC,MAAM;EACtE;EAEFC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;IACZ;EACF;;EAEAA,OAAO;IACL,IAAI,CAACH,eAAe,CAACG,OAAO,EAAE;IAC9B,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,eAAe,CAACI,UAAU;EACnD;EAEFC,WAAW;IACT;IACA,MAAMC,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAACX,0BAA0B,EAAE;MAC7DY,KAAK,EAAE;KACR,CAAC;IAEFF,SAAS,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzC,IAAIA,MAAM,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAAC;QACzC,IAAI,CAACX,eAAe,CAACK,WAAW,CAACM,MAAM,CAAC;QACxC;OACD,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;IAE3C,CAAC,CAAC;EACJ;EAEAC,cAAc,CAACC,UAAkB;IAE/B,IAAI,CAACf,eAAe,CAACc,cAAc,CAACC,UAAU,CAAC;EACjD;EAEAC,cAAc,CAACD,UAA8B,EAAEE,YAAgC;IAC7E,IAAIF,UAAU,KAAKG,SAAS,IAAI,CAACD,YAAY,EAAE;MAC7C;MACA;;IAGF,MAAMX,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAACV,2BAA2B,EAAE;MAC9DsB,IAAI,EAAE;QAAEJ,UAAU;QAAEE;MAAY;KACjC,CAAC;IAEFX,SAAS,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzC,IAAIA,MAAM,IAAIA,MAAM,CAACI,UAAU,IAAIJ,MAAM,CAACM,YAAY,EAAE;QACtD,IAAI,CAACjB,eAAe,CAACgB,cAAc,CAACL,MAAM,CAACI,UAAU,EAAEJ,MAAM,CAACM,YAAY,CAAC,CACxEP,SAAS,CACRU,QAAQ,IAAG;UACT,IAAI,CAACjB,OAAO,EAAE;QAChB,CAAC,EACDkB,KAAK,IAAG;UAEN,IAAIA,KAAK,YAAY1B,iBAAiB,EAAE;YAEtC,IAAI0B,KAAK,CAACA,KAAK,CAACC,MAAM,IAAID,KAAK,CAACA,KAAK,CAACC,MAAM,CAACC,YAAY,EAAE;cAEzD;cACA;cACA,IAAI,CAACC,QAAQ,CAACjB,IAAI,CAAC,oBAAoB,GAAGc,KAAK,CAACA,KAAK,CAACC,MAAM,CAACC,YAAY,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE;gBACrFE,QAAQ,EAAE;eACX,CAAC;;;QAGR,CAAC,CACF;;IAEP,CAAC,CAAC;EACJ;CAED;AA5EY3B,mBAAmB,eAN/BJ,SAAS,CAAC;EACTgC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,GAEW9B,mBAAmB,CA4E/B;SA5EYA,mBAAmB","names":["Component","HttpErrorResponse","AddCategoryDialogComponent","EditCategoryDialogComponent","CategoriesComponent","constructor","categoryDataSrv","dialog","ngOnInit","showAll","categories","addCategory","dialogRef","open","width","afterClosed","subscribe","result","console","log","deleteCategory","categoryId","updateCategory","categoryName","undefined","data","response","error","errors","CategoryName","snackBar","duration","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\STEP\\My_Project\\Angular\\CoreMVCAngularExam\\CoreMVCAngularExam\\ClientApp\\src\\app\\categories\\categories.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CategoryDataService, Category } from './categorydata.service';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { AddCategoryDialogComponent } from './addNewCategory.component';\r\nimport { EditCategoryDialogComponent } from '../edit-category-dialog/edit-category-dialog.component';\r\n\r\n@Component({\r\n  selector: 'categories', \r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.css'],\r\n})\r\n\r\nexport class CategoriesComponent implements OnInit {\r\n  public categories: Category[] | undefined;\r\n    http: any;\r\n    snackBar: any;\r\n\r\n  constructor(private categoryDataSrv: CategoryDataService, private dialog: MatDialog) {\r\n    }\r\n    \r\n  ngOnInit() {\r\n    this.showAll();\r\n      /*this.categories = this.categoryDataSrv.categories;*/\r\n    }\r\n    \r\n    showAll() {\r\n      this.categoryDataSrv.showAll();\r\n      this.categories = this.categoryDataSrv.categories;\r\n    }\r\n\r\n  addCategory() {\r\n    // Открываем диалоговое окно для добавления контакта\r\n    const dialogRef = this.dialog.open(AddCategoryDialogComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        console.log('Данные из диалога:', result);\r\n        this.categoryDataSrv.addCategory(result);\r\n        // Дополнительные действия\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCategory(categoryId: number): void {\r\n\r\n    this.categoryDataSrv.deleteCategory(categoryId);\r\n  }\r\n\r\n  updateCategory(categoryId: number | undefined, categoryName: string | undefined): void {\r\n    if (categoryId === undefined || !categoryName) {\r\n      // Отобразить сообщение об ошибке пользователю, что categoryId не определен\r\n      return;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\r\n      data: { categoryId, categoryName }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result && result.categoryId && result.categoryName) {\r\n        this.categoryDataSrv.updateCategory(result.categoryId, result.categoryName)\r\n          .subscribe(\r\n            response => {\r\n              this.showAll();\r\n            },\r\n            error => {\r\n\r\n              if (error instanceof HttpErrorResponse) {\r\n\r\n                if (error.error.errors && error.error.errors.CategoryName) {\r\n\r\n                  // Отобразить сообщение об ошибке пользователю\r\n                  // Например, используя Angular Material Snackbar\r\n                  this.snackBar.open('Validation error: ' + error.error.errors.CategoryName[0], 'Close', {\r\n                    duration: 5000,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}