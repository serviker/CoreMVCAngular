{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Category {}\nexport class CategoryDataService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.categories = [];\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  showAll() {\n    this.http.get(`https://localhost:7217/api/Categories`).subscribe(result => {\n      //this.categories = result;\n      this.categories.length = 0;\n      this.categories.push(...result);\n      console.log(result);\n    }, error => console.error(error));\n  }\n  addCategory(newCategory) {\n    const body = {\n      categoryName: newCategory // Предполагаем, что имя категории находится в поле categoryName\n    };\n\n    console.log(newCategory);\n    this.http.post(`https://localhost:7217/api/Categories`, body).subscribe(result => {\n      this.showAll();\n    }, error => console.error('Error adding category:', error));\n  }\n  /*\r\n  addCategory(newCategory: Category) {\r\n   console.log('Тело запроса:', newCategory);\r\n      const body = {\r\n     categoryName: newCategory\r\n   };\r\n      const headers = { 'Content-Type': 'application/json' };\r\n      this.http.post(`https://localhost:7217/api/Categories`, body, { headers })\r\n     .subscribe(\r\n       result => {\r\n         this.showAll();\r\n       },\r\n       error => {\r\n         console.error('Ошибка при добавлении категории:', error);\r\n       }\r\n     );\r\n  }\r\n  */\n  updateCategory(categoryId, categoryName) {\n    const body = {\n      categoryId: categoryId,\n      categoryName: categoryName\n    };\n    console.log(\"categoryData:\", categoryId, categoryName);\n    return this.http.put(`https://localhost:7217/api/Categories/${categoryId}`, body);\n  }\n  deleteCategory(categoryId) {\n    this.http.delete(`https://localhost:7217/api/Categories/${categoryId}`).subscribe(result => {\n      this.showAll();\n    }, error => console.error(error));\n  }\n}\nCategoryDataService.ɵfac = function CategoryDataService_Factory(t) {\n  return new (t || CategoryDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nCategoryDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryDataService,\n  factory: CategoryDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAIA,OAAM,MAAOA,QAAQ;AAQrB,OAAM,MAAOC,mBAAmB;EAK5BC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IAHnB,eAAU,GAAe,EAAE;IAI5B,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EAEAC,OAAO;IACL,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,uCAAuC,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACpF;MACA,IAAI,CAACC,UAAU,CAACC,MAAM,GAAG,CAAC;MAC1B,IAAI,CAACD,UAAU,CAACE,IAAI,CAAC,GAAGH,MAAoB,CAAC;MAC7CI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACrB,CAAC,EAAEM,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAGAC,WAAW,CAACC,WAAqB;IAC/B,MAAMC,IAAI,GAAG;MACXC,YAAY,EAAEF,WAAW,CAAE;KAC5B;;IACDJ,OAAO,CAACC,GAAG,CAACG,WAAW,CAAC;IACxB,IAAI,CAACb,IAAI,CAACgB,IAAI,CAAC,uCAAuC,EAAEF,IAAI,CAAC,CAACV,SAAS,CACrEC,MAAM,IAAG;MACP,IAAI,CAACH,OAAO,EAAE;IAChB,CAAC,EACDS,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CACxD;EACH;EACD;;;;;;;;;;;;;;;;;;EAsBCM,cAAc,CAACC,UAAkB,EAAEH,YAAoB;IACrD,MAAMD,IAAI,GAAG;MACXI,UAAU,EAAEA,UAAU;MACtBH,YAAY,EAAEA;KACf;IACDN,OAAO,CAACC,GAAG,CAAC,eAAe,EAACQ,UAAU,EAACH,YAAY,CAAC;IACpD,OAAO,IAAI,CAACf,IAAI,CAACmB,GAAG,CAAC,yCAAyCD,UAAU,EAAE,EAAEJ,IAAI,CAAC;EACnF;EAGAM,cAAc,CAACF,UAAkB;IAC/B,IAAI,CAAClB,IAAI,CAACqB,MAAM,CAAC,yCAAyCH,UAAU,EAAE,CAAC,CAACd,SAAS,CAC/EC,MAAM,IAAG;MACP,IAAI,CAACH,OAAO,EAAE;IAChB,CAAC,EACDS,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;;AAvESb,mBAAmB;mBAAnBA,mBAAmB,0CAKkB,UAAU;AAAA;AAL/CA,mBAAmB;SAAnBA,mBAAmB;EAAAwB,SAAnBxB,mBAAmB;EAAAyB,YAFlB;AAAM","names":["Category","CategoryDataService","constructor","http","baseUrl","showAll","get","subscribe","result","categories","length","push","console","log","error","addCategory","newCategory","body","categoryName","post","updateCategory","categoryId","put","deleteCategory","delete","factory","providedIn"],"sourceRoot":"","sources":["F:\\STEP\\My_Project\\Angular\\CoreMVCAngularExam\\CoreMVCAngularExam\\ClientApp\\src\\app\\categories\\categorydata.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class Category {\r\n  categoryId: number | undefined;\r\n  categoryName: string | undefined;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryDataService {\r\n\r\n  public categories: Category[] = [];\r\n    baseUrl: string;\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl;\r\n    }\r\n\r\n    showAll() {\r\n      this.http.get<Category[]>(`https://localhost:7217/api/Categories`).subscribe(result => {\r\n        //this.categories = result;\r\n        this.categories.length = 0;\r\n        this.categories.push(...result as Category[]);\r\n        console.log(result);\r\n      }, error => console.error(error));\r\n    }\r\n   \r\n\r\n    addCategory(newCategory: Category) {\r\n      const body = {\r\n        categoryName: newCategory  // Предполагаем, что имя категории находится в поле categoryName\r\n      };\r\n      console.log(newCategory);\r\n      this.http.post(`https://localhost:7217/api/Categories`, body).subscribe(\r\n        result => {\r\n          this.showAll();\r\n        },\r\n        error => console.error('Error adding category:', error)\r\n      );\r\n    }\r\n   /*\r\n  addCategory(newCategory: Category) {\r\n    console.log('Тело запроса:', newCategory);\r\n\r\n    const body = {\r\n      categoryName: newCategory\r\n    };\r\n\r\n    const headers = { 'Content-Type': 'application/json' };\r\n\r\n    this.http.post(`https://localhost:7217/api/Categories`, body, { headers })\r\n      .subscribe(\r\n        result => {\r\n          this.showAll();\r\n        },\r\n        error => {\r\n          console.error('Ошибка при добавлении категории:', error);\r\n        }\r\n      );\r\n  }\r\n   */\r\n\r\n    updateCategory(categoryId: number, categoryName: string): Observable<any> {\r\n      const body = {\r\n        categoryId: categoryId,\r\n        categoryName: categoryName\r\n      };\r\n      console.log(\"categoryData:\",categoryId,categoryName);\r\n      return this.http.put(`https://localhost:7217/api/Categories/${categoryId}`, body);\r\n    }\r\n\r\n   \r\n    deleteCategory(categoryId: number): void {\r\n      this.http.delete(`https://localhost:7217/api/Categories/${categoryId}`).subscribe(\r\n        result => {\r\n          this.showAll();\r\n        },\r\n        error => console.error(error)\r\n      );\r\n    }\r\n}  \r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}