{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AddContactDialogComponent } from '../add-contact-dialog/add-contact-dialog.component';\nimport { EditContactDialogComponent } from '../edit-contact-dialog/edit-contact-dialog.component';\nlet ContactsComponent = class ContactsComponent {\n  constructor(contactDataSrv, dialog) {\n    this.contactDataSrv = contactDataSrv;\n    this.dialog = dialog;\n    this.showAddForm = false; // Переменная для отображения/скрытия формы\n    this.newContact = {\n      firstName: '',\n      lastName: '',\n      categoryId: 0,\n      phoneId: 0,\n      contactId: 0\n    };\n  }\n  ngOnInit() {\n    this.contacts = this.contactDataSrv.contacts;\n    this.showAll();\n  }\n  /*\r\n  showAll() {\r\n  this.contactDataSrv.getContactsWithDetails().subscribe(data => {\r\n    this.contacts = data;\r\n  });\r\n  }  */\n  showAll() {\n    this.contactDataSrv.showAll();\n  }\n  /*\r\n  addContact(): void {\r\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\r\n      width: '400px',\r\n    });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n      console.log('Данные резалта:', result);\r\n      if (result) {\r\n        console.log('Данные if(резалт):', result);\r\n        this.contactDataSrv.addContact(result).subscribe(\r\n          response => {\r\n            console.log('Данные успешно добавлены:', response);\r\n            // После успешного добавления контакта, обновляем данные на странице.\r\n            this.showAll();\r\n          },\r\n          error => {\r\n            console.error('Не удалось добавить данные:', error);\r\n          },\r\n          () => {\r\n            console.log('Диалог успешно закрыт!');\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }*/\n  addContact() {\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('Данные резалта:', result);\n      if (result) {\n        console.log('Данные if(резалт):', result);\n        this.contactDataSrv.addContact(result).subscribe(response => {\n          console.log('Данные успешно добавлены:', response);\n          // После успешного добавления контакта, обновляем данные на странице.\n          this.showAll();\n        }, error => {\n          console.error('Не удалось добавить данные:', error);\n        }, () => {\n          console.log('Диалог успешно закрыт!');\n        });\n      } else {\n        console.log('Диалог закрыт без данных');\n      }\n    });\n  }\n  updateContact(contactId, firstName, lastName, categoryId, phoneId) {\n    if (contactId === undefined || categoryId === undefined || phoneId === undefined || !firstName || !lastName) {\n      return;\n    }\n    const dialogRef = this.dialog.open(EditContactDialogComponent, {\n      data: {\n        editedContactId: contactId,\n        contact: {\n          contactId,\n          firstName,\n          lastName,\n          categoryId,\n          phoneId\n        }\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log('Данные из диалога:', result);\n        // Обновите контакт в this.contactDataSrv после закрытия диалога\n        this.contactDataSrv.updateContact(result.contactId, result.firstName, result.lastName, result.categoryId, result.phoneId).subscribe(response => {\n          console.log('Contact updated successfully:', response);\n          this.showAll();\n          // Возможно, вы хотите выполнить какие-то дополнительные действия после успешного обновления\n        }, error => {\n          console.error('Error updating contact:', error);\n          // Обработайте ошибку, если это необходимо\n        });\n      } else {\n        console.log('Диалог закрыт без данных');\n      }\n    });\n  }\n  deleteContact(contactId) {\n    this.contactDataSrv.deleteContact(contactId);\n  }\n};\nContactsComponent = __decorate([Component({\n  selector: 'contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})], ContactsComponent);\nexport { ContactsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,yBAAyB,QAAQ,oDAAoD;AAC9F,SAASC,0BAA0B,QAAQ,sDAAsD;AAQ1F,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAS5BC,YAAoBC,cAAkC,EAAUC,MAAiB;IAA7D,mBAAc,GAAdD,cAAc;IAA8B,WAAM,GAANC,MAAM;IAP/D,gBAAW,GAAG,KAAK,CAAC,CAAC;IACrB,eAAU,GAAY;MACzBC,SAAS,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,UAAU,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MACtDC,SAAS,EAAE;KACd;EAIC;EAEFC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACR,cAAc,CAACQ,QAAQ;IAC5C,IAAI,CAACC,OAAO,EAAE;EACd;EACA;;;;;;EAOFA,OAAO;IACL,IAAI,CAACT,cAAc,CAACS,OAAO,EAAE;EAC/B;EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BAC,UAAU;IACR,MAAMC,SAAS,GAAG,IAAI,CAACV,MAAM,CAACW,IAAI,CAAChB,yBAAyB,EAAE;MAC5DiB,KAAK,EAAE;KACR,CAAC;IAEFF,SAAS,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAAC;MACtC,IAAIA,MAAM,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAAC;QACzC,IAAI,CAAChB,cAAc,CAACU,UAAU,CAACM,MAAM,CAAC,CAACD,SAAS,CAC9CI,QAAQ,IAAG;UACTF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,QAAQ,CAAC;UAClD;UACA,IAAI,CAACV,OAAO,EAAE;QAChB,CAAC,EACDW,KAAK,IAAG;UACNH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD,CAAC,EACD,MAAK;UACHH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACvC,CAAC,CACF;OACF,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;IAE3C,CAAC,CAAC;EACJ;EAEAG,aAAa,CAACf,SAA6B,EAAEJ,SAA6B,EAAEC,QAA4B,EAAEC,UAA8B,EAAEC,OAA2B;IACnK,IAAIC,SAAS,KAAKgB,SAAS,IAAIlB,UAAU,KAAKkB,SAAS,IAAIjB,OAAO,KAAKiB,SAAS,IAAI,CAACpB,SAAS,IAAI,CAACC,QAAQ,EAAE;MAC3G;;IAGF,MAAMQ,SAAS,GAAG,IAAI,CAACV,MAAM,CAACW,IAAI,CAACf,0BAA0B,EAAE;MAC7D0B,IAAI,EAAE;QAAEC,eAAe,EAAElB,SAAS;QAAEmB,OAAO,EAAE;UAAEnB,SAAS;UAAEJ,SAAS;UAAEC,QAAQ;UAAEC,UAAU;UAAEC;QAAO;MAAE;KACrG,CAAC;IAEFM,SAAS,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzC,IAAIA,MAAM,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAAC;QACzC;QACA,IAAI,CAAChB,cAAc,CAACqB,aAAa,CAACL,MAAM,CAACV,SAAS,EAAEU,MAAM,CAACd,SAAS,EAAEc,MAAM,CAACb,QAAQ,EAAEa,MAAM,CAACZ,UAAU,EAAEY,MAAM,CAACX,OAAO,CAAC,CACtHU,SAAS,CAACI,QAAQ,IAAG;UACpBF,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,QAAQ,CAAC;UACtD,IAAI,CAACV,OAAO,EAAE;UACd;QACF,CAAC,EAAEW,KAAK,IAAG;UACTH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/C;QACF,CAAC,CAAC;OAEL,MAAM;QACLH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;IAG3C,CAAC,CAAC;EACJ;EAEAQ,aAAa,CAACpB,SAAiB;IAE7B,IAAI,CAACN,cAAc,CAAC0B,aAAa,CAACpB,SAAS,CAAC;EAC9C;CACD;AArHYR,iBAAiB,eAL7BH,SAAS,CAAC;EACTgC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW/B,iBAAiB,CAqH7B;SArHYA,iBAAiB","names":["Component","AddContactDialogComponent","EditContactDialogComponent","ContactsComponent","constructor","contactDataSrv","dialog","firstName","lastName","categoryId","phoneId","contactId","ngOnInit","contacts","showAll","addContact","dialogRef","open","width","afterClosed","subscribe","result","console","log","response","error","updateContact","undefined","data","editedContactId","contact","deleteContact","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\STEP\\My_Project\\Angular\\CoreMVCAngularExam\\CoreMVCAngularExam\\ClientApp\\src\\app\\contacts\\contacts.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ContactDataService, Contact } from './contactdata.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AddContactDialogComponent } from '../add-contact-dialog/add-contact-dialog.component';\r\nimport { EditContactDialogComponent } from '../edit-contact-dialog/edit-contact-dialog.component';\r\n\r\n\r\n@Component({\r\n  selector: 'contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css']\r\n})\r\nexport class ContactsComponent implements OnInit {\r\n  public contacts: Contact[] | undefined;\r\n  public showAddForm = false; // Переменная для отображения/скрытия формы\r\n  public newContact: Contact = {\r\n      firstName: '', lastName: '', categoryId: 0, phoneId: 0,\r\n      contactId: 0\r\n  };\r\n\r\n\r\n  constructor(private contactDataSrv: ContactDataService, private dialog: MatDialog) {\r\n    }\r\n    \r\n  ngOnInit() {\r\n    this.contacts = this.contactDataSrv.contacts;\r\n    this.showAll();\r\n    }\r\n    /*\r\n  showAll() {\r\n    this.contactDataSrv.getContactsWithDetails().subscribe(data => {\r\n      this.contacts = data;\r\n    });\r\n  }  */\r\n\r\n  showAll() {\r\n    this.contactDataSrv.showAll();\r\n  }\r\n  /*\r\n  addContact(): void {\r\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('Данные резалта:', result);\r\n      if (result) {\r\n        console.log('Данные if(резалт):', result);\r\n        this.contactDataSrv.addContact(result).subscribe(\r\n          response => {\r\n            console.log('Данные успешно добавлены:', response);\r\n            // После успешного добавления контакта, обновляем данные на странице.\r\n            this.showAll();\r\n          },\r\n          error => {\r\n            console.error('Не удалось добавить данные:', error);\r\n          },\r\n          () => {\r\n            console.log('Диалог успешно закрыт!');\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }*/\r\n\r\n  addContact(): void {\r\n    const dialogRef = this.dialog.open(AddContactDialogComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('Данные резалта:', result);\r\n      if (result) {\r\n        console.log('Данные if(резалт):', result);\r\n        this.contactDataSrv.addContact(result).subscribe(\r\n          response => {\r\n            console.log('Данные успешно добавлены:', response);\r\n            // После успешного добавления контакта, обновляем данные на странице.\r\n            this.showAll();\r\n          },\r\n          error => {\r\n            console.error('Не удалось добавить данные:', error);\r\n          },\r\n          () => {\r\n            console.log('Диалог успешно закрыт!');\r\n          }\r\n        );\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }\r\n \r\n  updateContact(contactId: number | undefined, firstName: string | undefined, lastName: string | undefined, categoryId: number | undefined, phoneId: number | undefined): void {\r\n    if (contactId === undefined || categoryId === undefined || phoneId === undefined || !firstName || !lastName) {\r\n      return;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(EditContactDialogComponent, {\r\n      data: { editedContactId: contactId, contact: { contactId, firstName, lastName, categoryId, phoneId } },\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        console.log('Данные из диалога:', result);\r\n        // Обновите контакт в this.contactDataSrv после закрытия диалога\r\n        this.contactDataSrv.updateContact(result.contactId, result.firstName, result.lastName, result.categoryId, result.phoneId)\r\n          .subscribe(response => {\r\n            console.log('Contact updated successfully:', response);\r\n            this.showAll();\r\n            // Возможно, вы хотите выполнить какие-то дополнительные действия после успешного обновления\r\n          }, error => {\r\n            console.error('Error updating contact:', error);\r\n            // Обработайте ошибку, если это необходимо\r\n          });\r\n\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  deleteContact(contactId: number): void {\r\n\r\n    this.contactDataSrv.deleteContact(contactId);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}