{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AddCategoryDialogComponent } from './addNewCategory.component';\n//import { DataSource } from '@angular/cdk/collections';\n//import { Observable, ReplaySubject } from 'rxjs';\n//import { MatTableModule } from '@angular/material/table';\n//import { MatButtonModule } from '@angular/material/button';\n//import { MatTooltipModule } from '@angular/material/tooltip';\n//import { MatIconModule } from '@angular/material/icon';\nlet CategoriesComponent = class CategoriesComponent {\n  constructor(categoryDataSrv, dialog) {\n    this.categoryDataSrv = categoryDataSrv;\n    this.dialog = dialog;\n  }\n  ngOnInit() {\n    this.showAll();\n    /*this.categories = this.categoryDataSrv.categories;*/\n  }\n\n  showAll() {\n    this.categoryDataSrv.showAll();\n    this.categories = this.categoryDataSrv.categories;\n  }\n  addCategory() {\n    // Открываем диалоговое окно для добавления контакта\n    const dialogRef = this.dialog.open(AddCategoryDialogComponent, {\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        console.log('Данные из диалога:', result);\n        this.categoryDataSrv.addCategory(result);\n        // Дополнительные действия\n      } else {\n        console.log('Диалог закрыт без данных');\n      }\n    });\n  }\n  /*\r\n  addCategory() {\r\n          this.categoryDataSrv.addCategory();\r\n    }\r\n   */\n  updateCategory() {\n    this.categoryDataSrv.updateCategory();\n  }\n  deleteCategory() {\n    this.categoryDataSrv.deleteCategory();\n  }\n};\nCategoriesComponent = __decorate([Component({\n  selector: 'categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\n/* @Component({\r\n   selector: 'button-types-example',\r\n   templateUrl: 'button-types-example.html',\r\n   styleUrls: ['button-types-example.css'],\r\n   standalone: true,\r\n   imports: [MatButtonModule, MatTooltipModule, MatIconModule],\r\n }) */], CategoriesComponent);\nexport { CategoriesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAASC,0BAA0B,QAAQ,4BAA4B;AAGvE;AACA;AACA;AACA;AACA;AACA;AAgBO,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,eAAoC,EAAUC,MAAiB;IAA/D,oBAAe,GAAfD,eAAe;IAA+B,WAAM,GAANC,MAAM;EACtE;EAEFC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;IACZ;EACF;;EAEAA,OAAO;IACL,IAAI,CAACH,eAAe,CAACG,OAAO,EAAE;IAC9B,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,eAAe,CAACI,UAAU;EACnD;EAEFC,WAAW;IACT;IACA,MAAMC,SAAS,GAAG,IAAI,CAACL,MAAM,CAACM,IAAI,CAACV,0BAA0B,EAAE;MAC7DW,KAAK,EAAE;KACR,CAAC;IAEFF,SAAS,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MACzC,IAAIA,MAAM,EAAE;QACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAAC;QACzC,IAAI,CAACX,eAAe,CAACK,WAAW,CAACM,MAAM,CAAC;QACxC;OACD,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;IAE3C,CAAC,CAAC;EACJ;EACA;;;;;EAMAC,cAAc;IAEV,IAAI,CAACd,eAAe,CAACc,cAAc,EAAE;EACvC;EAEFC,cAAc;IACV,IAAI,CAACf,eAAe,CAACe,cAAc,EAAE;EACvC;CACH;AA9CYjB,mBAAmB,eAb/BF,SAAS,CAAC;EACToB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC;AACA;;;;;;MAAA,GAQYpB,mBAAmB,CA8C/B;SA9CYA,mBAAmB","names":["Component","AddCategoryDialogComponent","CategoriesComponent","constructor","categoryDataSrv","dialog","ngOnInit","showAll","categories","addCategory","dialogRef","open","width","afterClosed","subscribe","result","console","log","updateCategory","deleteCategory","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["F:\\STEP\\My_Project\\Angular\\CoreMvcAngularExam\\CoreMVCAngularExam\\ClientApp\\src\\app\\categories\\categories.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CategoryDataService, Category } from './categorydata.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AddCategoryDialogComponent } from './addNewCategory.component';\r\n\r\n\r\n//import { DataSource } from '@angular/cdk/collections';\r\n//import { Observable, ReplaySubject } from 'rxjs';\r\n//import { MatTableModule } from '@angular/material/table';\r\n//import { MatButtonModule } from '@angular/material/button';\r\n//import { MatTooltipModule } from '@angular/material/tooltip';\r\n//import { MatIconModule } from '@angular/material/icon';\r\n\r\n\r\n@Component({\r\n  selector: 'categories', \r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.css'],\r\n})\r\n /* @Component({\r\n    selector: 'button-types-example',\r\n    templateUrl: 'button-types-example.html',\r\n    styleUrls: ['button-types-example.css'],\r\n    standalone: true,\r\n    imports: [MatButtonModule, MatTooltipModule, MatIconModule],\r\n  }) */\r\n\r\nexport class CategoriesComponent implements OnInit {\r\n  public categories: Category[] | undefined;\r\n\r\n  constructor(private categoryDataSrv: CategoryDataService, private dialog: MatDialog) {\r\n    }\r\n    \r\n  ngOnInit() {\r\n    this.showAll();\r\n      /*this.categories = this.categoryDataSrv.categories;*/\r\n    }\r\n    \r\n    showAll() {\r\n      this.categoryDataSrv.showAll();\r\n      this.categories = this.categoryDataSrv.categories;\r\n    }\r\n\r\n  addCategory() {\r\n    // Открываем диалоговое окно для добавления контакта\r\n    const dialogRef = this.dialog.open(AddCategoryDialogComponent, {\r\n      width: '400px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        console.log('Данные из диалога:', result);\r\n        this.categoryDataSrv.addCategory(result);\r\n        // Дополнительные действия\r\n      } else {\r\n        console.log('Диалог закрыт без данных');\r\n      }\r\n    });\r\n  }\r\n  /*\r\n  addCategory() {\r\n\r\n      this.categoryDataSrv.addCategory();\r\n    } \r\n   */ \r\n  updateCategory() {\r\n\r\n      this.categoryDataSrv.updateCategory();\r\n    }\r\n\r\n  deleteCategory() {\r\n      this.categoryDataSrv.deleteCategory();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}